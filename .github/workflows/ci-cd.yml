name: CI/CD

on:
  push:
    tags:
      - v*
env:
  PROPERTIES_PATH: "./android/key.properties"  
  JAVA_VERSION: "12.x"
  FLUTTER_VERSION: "2.5.3"
  FLUTTER_CHANNEL: "stable"

jobs:
  flutter_test:
    name: Run Flutter analyze and test - My_Coins
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{env.JAVA_VERSION}}
          #java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{env.FLUTTER_CHANNEL}}
          flutter-version: ${{env.FLUTTER_VERSION}}
          #channel: "stable"
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter format --dry-run --set-exit-if-changed lib/
      - run: flutter format --dry-run --set-exit-if-changed test/
      - run: flutter test --coverage
      - run: flutter test --machine > test-results-mycoins.json
      - uses: dorny/test-reporter@v1.4.2
        with:
          name: test-results-mycoins
          path: test-results-mycoins.json
          reporter: flutter-json
      - uses: VeryGoodOpenSource/very_good_coverage@v1.1.1
        with:
          min_coverage: 40
      # Creating the key.properties file
      - run: |
          echo keyPassword=\${{ secrets.KEY_STORE }} > ${{env.PROPERTIES_PATH}}
          echo storePassword=\${{ secrets.KEY_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
          echo keyAlias=\${{ secrets.KEY_ALIAS }} >> ${{env.PROPERTIES_PATH}}    
      - uses: subosito/flutter-action@v1

      # Decoding base64 key into a file
      - run: echo "${{ secrets.KEYSTORE2 }}" | base64 --decode > android/app/key.jks
        # Get dependencies and make assigned appbundle
      - run: |
          flutter pub get
          flutter build appbundle    
      # Make appbundle downloadable
      - name: Upload artefato
        uses: actions/upload-artifact@v2
        with:
          name: appbundle
          path: build/app/outputs/bundle/release            
  
  build_ios:
    name: Build Flutter iOS
    needs: [flutter_test]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{env.JAVA_VERSION}}
          #java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter clean
      - run: flutter build ios --release --no-codesign    

  build_appbundle:
    name: Build Flutter (Android) APPBUNDLE 
    needs: [flutter_test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{env.JAVA_VERSION}}
          #java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{env.FLUTTER_CHANNEL}}
          flutter-version: ${{env.FLUTTER_VERSION}}
          #channel: "stable"
      - run: flutter pub get
      - run: flutter clean
      - run: flutter build appbundle
      - name: Upload appbundle
        uses: actions/upload-artifact@v2.1.4
        with:
          name: appbundle
          path: build/app/outputs/bundle/release/app-release.aab

  build_apk:
      name: Build Flutter (Android) APK 
      needs: [flutter_test]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v1
          with:
            java-version: ${{env.JAVA_VERSION}}
            #java-version: "12.x"                                                          
        - uses: subosito/flutter-action@v1
          with:
            channel: ${{env.FLUTTER_CHANNEL}}
            flutter-version: ${{env.FLUTTER_VERSION}}
            #channel: "stable"
        - run: flutter pub get
        - run: flutter clean
        - run: flutter build apk
        - name: Upload apk
          uses: actions/upload-artifact@v2.1.4
          with:
            name: apk
            path: build/app/outputs/flutter-apk/app-release.apk